{"ast":null,"code":"import _asyncToGenerator from\"C:\\\\Users\\\\kueny\\\\Documents\\\\planet\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _toConsumableArray from\"C:\\\\Users\\\\kueny\\\\Documents\\\\planet\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\toConsumableArray.js\";import _classCallCheck from\"C:\\\\Users\\\\kueny\\\\Documents\\\\planet\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";import _createClass from\"C:\\\\Users\\\\kueny\\\\Documents\\\\planet\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\kueny\\\\Documents\\\\planet\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";//import * as THREE from \"three\";\nimport{GLTFLoader}from'https://cdn.jsdelivr.net/npm/three/examples/jsm/loaders/GLTFLoader.js';import{OrbitControls}from\"https://cdn.jsdelivr.net/npm/three/examples/jsm/controls/OrbitControls.js\";var Satalite=/*#__PURE__*/function(){function Satalite(){_classCallCheck(this,Satalite);var geometry=new THREE.SphereGeometry(1,32,16);colorRandom();var material=new THREE.MeshBasicMaterial({color:colorRandom()});// enable transparency\nmaterial.transparent=true;// set opacity to 50%\nmaterial.opacity=0.5;//const texture = new THREE.TextureLoader().load( '/assets/textures/Earth.002_diffuse.jpeg' );\n//const material = new THREE.MeshBasicMaterial( { map: texture } );\nthis.satalite=new THREE.Mesh(geometry,material);this.satalite.position.x=50;this.satalite.position.y=0;this.satalite.position.z=0;return this;}_createClass(Satalite,[{key:\"SatByLatLong\",value:function SatByLatLong(lat,long){var cartesian_cordinates=calcCrow(lat,long,50);this.satalite.position.x=cartesian_cordinates.x;this.satalite.position.y=cartesian_cordinates.y;this.satalite.position.z=cartesian_cordinates.z;return this;}},{key:\"SatByCart\",value:function SatByCart(x,y,z){this.satalite.position.x=x;this.satalite.position.y=z;this.satalite.position.z=y;}},{key:\"changeColorRandom\",value:function changeColorRandom(){}}]);return Satalite;}();function calcCrow(latitude,longitude,radius){var lat=latitude;var lon=longitude;console.log(Math.cos(lat),Math.cos(lon));var x=radius*Math.cos(lat)*Math.cos(lon);var y=radius*Math.cos(lat)*Math.sin(lon);var z=radius*Math.sin(lat);console.log(6371*x/250,6371*y/250,6371*z/250);return{x:x,y:y,z:z};}function calcCrowReverse(x,y,z){var lat=Math.asin(z,1);var long=Math.atan2(y,x);}function colorRandom(){var genRanHex=function genRanHex(size){return _toConsumableArray(Array(size)).map(function(){return Math.floor(Math.random()*16).toString(16);}).join('');};return'#'+genRanHex(6);}/**\r\n * Provides requestAnimationFrame in a cross browser way.\r\n * @author paulirish / http://paulirish.com/\r\n */if(!window.requestAnimationFrame){window.requestAnimationFrame=function(){return window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(/* function FrameRequestCallback */callback,/* DOMElement Element */element){window.setTimeout(callback,1000/60);};}();}var container,stats;var camera,scene,renderer,controls,raycaster;var mouse=new THREE.Vector2(),INTERSECTED;var dictionary;var sphere,earth,salatites,plane;var targetRotationX=0.5;var targetRotationOnMouseDownX=0;var targetRotationY=0.2;var targetRotationOnMouseDownY=0;var mouseX=0;var mouseXOnMouseDown=0;var mouseY=0;var mouseYOnMouseDown=0;var windowHalfX=window.innerWidth/2;var windowHalfY=window.innerHeight/2;var slowingFactor=0.25;document.addEventListener('mousewheel',function(event){camera.position.z+=event.deltaY/50;});init().then(function(response){animate();});function loadWorld(){return _loadWorld.apply(this,arguments);}function _loadWorld(){_loadWorld=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var loader,earthData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:loader=new GLTFLoader();loader.loadAsync('/assets/scene.gltf').then(function(data){earthData=data;});//console.log(earthData);\nearthData=setupModel(earthData);//console.log(earthData);\nreturn _context.abrupt(\"return\",earthData);case 4:case\"end\":return _context.stop();}}},_callee);}));return _loadWorld.apply(this,arguments);}function init(){return _init.apply(this,arguments);}function _init(){_init=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var geometry,texture,material,city_list;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:container=document.createElement('div');document.body.appendChild(container);raycaster=new THREE.Raycaster();renderer=new THREE.WebGLRenderer({antialias:true});renderer.setSize(window.innerWidth,window.innerHeight);renderer.domElement.addEventListener(\"click\",onclick,true);//renderer.setClearColor( 0x00cccc, 0);\ncontainer.appendChild(renderer.domElement);document.addEventListener('mousedown',onDocumentMouseDown,false);scene=new THREE.Scene();scene.background=new THREE.Color(0x00cccc);camera=new THREE.PerspectiveCamera(70,window.innerWidth/window.innerHeight,1,1000);//console.log(camera);\ncamera.position.y=0;camera.position.z=100;// camera.rotation.x = 0;\n// camera.rotation.y = 0;\n// camera.rotation.z = 0;\n//console.log(renderer);\ncontrols=new OrbitControls(camera,renderer.domElement);scene.add(camera);geometry=new THREE.SphereGeometry(50,32,16);//var material = new THREE.MeshBasicMaterial( { color: \"#166294\" } );\ntexture=new THREE.TextureLoader().load('/assets/textures/Earth.002_diffuse.jpeg');material=new THREE.MeshBasicMaterial({map:texture});sphere=new THREE.Mesh(geometry,material);sphere.name='Earth';//log calcrow\n// fetch('/assets/json/sample.json')\n// fetch('http://example.com/movies.json')\n// .then(response => response.json())\n// .then(data => console.log(data))\n// .then(function(){\n//   var temp = data\n//   console.log(temp);\n//   city_list = temp\n//   console.log(city_list);\n//\n//   dictionary =[];\n//   for (var i=0; i<100; i++) {\n//     var temp_satalite = new Satalite();\n//     temp_satalite.SatByCart(city_list[i].x, -1*city_list[i].y, city_list[i].z);\n//     temp_satalite.satalite.name = city_list[i].city;\n//     scene.add( temp_satalite.satalite );\n//\n//     //temp_satalite.statlite.on('click',function(ev) {});\n//     //console.log(temp_satalite.satalite);\n//   }\n// })\ncontrols.addEventListener('change',render);scene.add(sphere);plane=new THREE.Mesh(new THREE.PlaneGeometry(200,200),new THREE.MeshBasicMaterial({color:0xe0e0e0}));//plane.rotation.x = - 90 * ( Math.PI / 180 );\nplane.overdraw=true;case 24:case\"end\":return _context2.stop();}}},_callee2);}));return _init.apply(this,arguments);}function onDocumentMouseDown(event){event.preventDefault();document.addEventListener('mousemove',onDocumentMouseMove,false);document.addEventListener('mouseup',onDocumentMouseUp,false);document.addEventListener('mouseout',onDocumentMouseOut,false);mouseXOnMouseDown=event.clientX-windowHalfX;targetRotationOnMouseDownX=targetRotationX;mouseYOnMouseDown=event.clientY-windowHalfY;targetRotationOnMouseDownY=targetRotationY;}function onDocumentMouseMove(event){mouseX=event.clientX-windowHalfX;targetRotationX=(mouseX-mouseXOnMouseDown)*0.00025;mouseY=event.clientY-windowHalfY;targetRotationY=(mouseY-mouseYOnMouseDown)*0.00025;}function onDocumentMouseUp(event){document.removeEventListener('mousemove',onDocumentMouseMove,false);document.removeEventListener('mouseup',onDocumentMouseUp,false);document.removeEventListener('mouseout',onDocumentMouseOut,false);}function onDocumentMouseOut(event){document.removeEventListener('mousemove',onDocumentMouseMove,false);document.removeEventListener('mouseup',onDocumentMouseUp,false);document.removeEventListener('mouseout',onDocumentMouseOut,false);}function animate(){requestAnimationFrame(animate);render();}function render(){targetRotationY=targetRotationY*(1-slowingFactor);targetRotationX=targetRotationX*(1-slowingFactor);//console.log(camera);\nraycaster.setFromCamera(mouse,camera);var intersects=raycaster.intersectObjects(scene.children);if(intersects.length>0){if(INTERSECTED!=intersects[0].object){// if ( INTERSECTED ) INTERSECTED.material.emissive.setHex( INTERSECTED.currentHex );\nINTERSECTED=intersects[0].object;// INTERSECTED.currentHex = INTERSECTED.material.emissive.getHex();\nconsole.log(intersects);}}renderer.render(scene,camera);}","map":{"version":3,"sources":["C:/Users/kueny/Documents/planet/src/index.js"],"names":["GLTFLoader","OrbitControls","Satalite","geometry","THREE","SphereGeometry","colorRandom","material","MeshBasicMaterial","color","transparent","opacity","satalite","Mesh","position","x","y","z","lat","long","cartesian_cordinates","calcCrow","latitude","longitude","radius","lon","console","log","Math","cos","sin","calcCrowReverse","asin","atan2","genRanHex","size","Array","map","floor","random","toString","join","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","element","setTimeout","container","stats","camera","scene","renderer","controls","raycaster","mouse","Vector2","INTERSECTED","dictionary","sphere","earth","salatites","plane","targetRotationX","targetRotationOnMouseDownX","targetRotationY","targetRotationOnMouseDownY","mouseX","mouseXOnMouseDown","mouseY","mouseYOnMouseDown","windowHalfX","innerWidth","windowHalfY","innerHeight","slowingFactor","document","addEventListener","event","deltaY","init","then","response","animate","loadWorld","loader","loadAsync","data","earthData","setupModel","createElement","body","appendChild","Raycaster","WebGLRenderer","antialias","setSize","domElement","onclick","onDocumentMouseDown","Scene","background","Color","PerspectiveCamera","add","texture","TextureLoader","load","name","render","PlaneGeometry","overdraw","preventDefault","onDocumentMouseMove","onDocumentMouseUp","onDocumentMouseOut","clientX","clientY","removeEventListener","setFromCamera","intersects","intersectObjects","children","length","object"],"mappings":"moBACA;AACA,OAASA,UAAT,KAA2B,uEAA3B,CACA,OAAQC,aAAR,KAA4B,2EAA5B,C,GAEMC,CAAAA,Q,yBAGJ,mBAAa,gCACX,GAAIC,CAAAA,QAAQ,CAAG,GAAIC,CAAAA,KAAK,CAACC,cAAV,CAA0B,CAA1B,CAA6B,EAA7B,CAAiC,EAAjC,CAAf,CACAC,WAAW,GACX,GAAIC,CAAAA,QAAQ,CAAG,GAAIH,CAAAA,KAAK,CAACI,iBAAV,CAA6B,CAAEC,KAAK,CAAEH,WAAW,EAApB,CAA7B,CAAf,CACA;AACAC,QAAQ,CAACG,WAAT,CAAuB,IAAvB,CACA;AACAH,QAAQ,CAACI,OAAT,CAAmB,GAAnB,CACA;AACA;AACA,KAAKC,QAAL,CAAgB,GAAIR,CAAAA,KAAK,CAACS,IAAV,CAAgBV,QAAhB,CAA0BI,QAA1B,CAAhB,CACA,KAAKK,QAAL,CAAcE,QAAd,CAAuBC,CAAvB,CAA2B,EAA3B,CACA,KAAKH,QAAL,CAAcE,QAAd,CAAuBE,CAAvB,CAA2B,CAA3B,CACA,KAAKJ,QAAL,CAAcE,QAAd,CAAuBG,CAAvB,CAA2B,CAA3B,CAEA,MAAO,KAAP,CAED,C,iDAED,sBAAaC,GAAb,CAAkBC,IAAlB,CAAuB,CAErB,GAAIC,CAAAA,oBAAoB,CAACC,QAAQ,CAACH,GAAD,CAAKC,IAAL,CAAW,EAAX,CAAjC,CACA,KAAKP,QAAL,CAAcE,QAAd,CAAuBC,CAAvB,CAA2BK,oBAAoB,CAACL,CAAhD,CACA,KAAKH,QAAL,CAAcE,QAAd,CAAuBE,CAAvB,CAA2BI,oBAAoB,CAACJ,CAAhD,CACA,KAAKJ,QAAL,CAAcE,QAAd,CAAuBG,CAAvB,CAA2BG,oBAAoB,CAACH,CAAhD,CAEA,MAAO,KAAP,CACD,C,yBACD,mBAAUF,CAAV,CAAYC,CAAZ,CAAcC,CAAd,CAAgB,CACd,KAAKL,QAAL,CAAcE,QAAd,CAAuBC,CAAvB,CAA2BA,CAA3B,CACA,KAAKH,QAAL,CAAcE,QAAd,CAAuBE,CAAvB,CAA2BC,CAA3B,CACA,KAAKL,QAAL,CAAcE,QAAd,CAAuBG,CAAvB,CAA2BD,CAA3B,CACD,C,iCACD,4BAAmB,CAElB,C,wBAGH,QAASK,CAAAA,QAAT,CAAkBC,QAAlB,CAA4BC,SAA5B,CAAuCC,MAAvC,CACA,CAEI,GAAMN,CAAAA,GAAG,CAAII,QAAb,CACA,GAAMG,CAAAA,GAAG,CAAIF,SAAb,CACAG,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,GAAL,CAASX,GAAT,CAAZ,CAA0BU,IAAI,CAACC,GAAL,CAASJ,GAAT,CAA1B,EACA,GAAMV,CAAAA,CAAC,CAAGS,MAAM,CAACI,IAAI,CAACC,GAAL,CAASX,GAAT,CAAP,CAAuBU,IAAI,CAACC,GAAL,CAASJ,GAAT,CAAjC,CAEA,GAAMT,CAAAA,CAAC,CAAGQ,MAAM,CAACI,IAAI,CAACC,GAAL,CAASX,GAAT,CAAP,CAAuBU,IAAI,CAACE,GAAL,CAASL,GAAT,CAAjC,CAEA,GAAMR,CAAAA,CAAC,CAAGO,MAAM,CAACI,IAAI,CAACE,GAAL,CAASZ,GAAT,CAAjB,CACAQ,OAAO,CAACC,GAAR,CAAa,KAAKZ,CAAL,CAAO,GAApB,CAA0B,KAAKC,CAAL,CAAO,GAAjC,CAAuC,KAAKC,CAAL,CAAO,GAA9C,EACA,MAAO,CAACF,CAAC,CAADA,CAAD,CAAGC,CAAC,CAADA,CAAH,CAAKC,CAAC,CAADA,CAAL,CAAP,CAEH,CACD,QAASc,CAAAA,eAAT,CAAyBhB,CAAzB,CAA2BC,CAA3B,CAA6BC,CAA7B,CACA,CAEE,GAAMC,CAAAA,GAAG,CAAGU,IAAI,CAACI,IAAL,CAAUf,CAAV,CAAY,CAAZ,CAAZ,CACA,GAAME,CAAAA,IAAI,CAAGS,IAAI,CAACK,KAAL,CAAWjB,CAAX,CAAaD,CAAb,CAAb,CAED,CACD,QAAST,CAAAA,WAAT,EAAsB,CAEpB,GAAM4B,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAAC,IAAI,QAAI,oBAAIC,KAAK,CAACD,IAAD,CAAT,EAAiBE,GAAjB,CAAqB,iBAAMT,CAAAA,IAAI,CAACU,KAAL,CAAWV,IAAI,CAACW,MAAL,GAAgB,EAA3B,EAA+BC,QAA/B,CAAwC,EAAxC,CAAN,EAArB,EAAwEC,IAAxE,CAA6E,EAA7E,CAAJ,EAAtB,CAEA,MAAO,IAAIP,SAAS,CAAC,CAAD,CAApB,CAED,CAED;AACA;AACA;AACA,GAEA,GAAI,CAACQ,MAAM,CAACC,qBAAZ,CAAmC,CAEjCD,MAAM,CAACC,qBAAP,CAAgC,UAAW,CAEzC,MAAOD,CAAAA,MAAM,CAACE,2BAAP,EACLF,MAAM,CAACG,wBADF,EAELH,MAAM,CAACI,sBAFF,EAGLJ,MAAM,CAACK,uBAHF,EAIL,SAAU,mCAAoCC,QAA9C,CAAwD,wBAAyBC,OAAjF,CAA0F,CAExFP,MAAM,CAACQ,UAAP,CAAkBF,QAAlB,CAA4B,KAAO,EAAnC,EAED,CARH,CAUD,CAZ8B,EAA/B,CAcD,CACE,GAAIG,CAAAA,SAAJ,CAAeC,KAAf,CAES,GAAIC,CAAAA,MAAJ,CAAYC,KAAZ,CAAmBC,QAAnB,CAA6BC,QAA7B,CAAuCC,SAAvC,CACA,GAAIC,CAAAA,KAAK,CAAG,GAAItD,CAAAA,KAAK,CAACuD,OAAV,EAAZ,CACIC,WADJ,CAEA,GAAIC,CAAAA,UAAJ,CACA,GAAIC,CAAAA,MAAJ,CAAYC,KAAZ,CAAmBC,SAAnB,CAA8BC,KAA9B,CAEA,GAAIC,CAAAA,eAAe,CAAG,GAAtB,CACA,GAAIC,CAAAA,0BAA0B,CAAG,CAAjC,CAEA,GAAIC,CAAAA,eAAe,CAAG,GAAtB,CACA,GAAIC,CAAAA,0BAA0B,CAAG,CAAjC,CAEA,GAAIC,CAAAA,MAAM,CAAG,CAAb,CACA,GAAIC,CAAAA,iBAAiB,CAAG,CAAxB,CAEA,GAAIC,CAAAA,MAAM,CAAG,CAAb,CACA,GAAIC,CAAAA,iBAAiB,CAAG,CAAxB,CAIA,GAAIC,CAAAA,WAAW,CAAGhC,MAAM,CAACiC,UAAP,CAAoB,CAAtC,CACA,GAAIC,CAAAA,WAAW,CAAGlC,MAAM,CAACmC,WAAP,CAAqB,CAAvC,CAEA,GAAIC,CAAAA,aAAa,CAAG,IAApB,CACAC,QAAQ,CAACC,gBAAT,CAA2B,YAA3B,CAAyC,SAACC,KAAD,CAAW,CAClD5B,MAAM,CAACvC,QAAP,CAAgBG,CAAhB,EAAoBgE,KAAK,CAACC,MAAN,CAAa,EAAjC,CACD,CAFD,EAGAC,IAAI,GAAGC,IAAP,CAAY,SAAAC,QAAQ,CAAE,CAACC,OAAO,GAAG,CAAjC,E,QAGeC,CAAAA,S,qIAAf,wJAGQC,MAHR,CAGiB,GAAIxF,CAAAA,UAAJ,EAHjB,CAKEwF,MAAM,CAACC,SAAP,CAAiB,oBAAjB,EAAuCL,IAAvC,CAA4C,SAACM,IAAD,CAAQ,CAACC,SAAS,CAAGD,IAAZ,CAAiB,CAAtE,EACA;AACAC,SAAS,CAAGC,UAAU,CAACD,SAAD,CAAtB,CACA;AARF,gCASSA,SATT,wD,oDAYeR,CAAAA,I,sHAAf,gLAEIhC,SAAS,CAAG4B,QAAQ,CAACc,aAAT,CAAwB,KAAxB,CAAZ,CACAd,QAAQ,CAACe,IAAT,CAAcC,WAAd,CAA2B5C,SAA3B,EAEAM,SAAS,CAAG,GAAIrD,CAAAA,KAAK,CAAC4F,SAAV,EAAZ,CACAzC,QAAQ,CAAG,GAAInD,CAAAA,KAAK,CAAC6F,aAAV,CAAwB,CAC/BC,SAAS,CAAE,IADoB,CAAxB,CAAX,CAIA3C,QAAQ,CAAC4C,OAAT,CAAkBzD,MAAM,CAACiC,UAAzB,CAAqCjC,MAAM,CAACmC,WAA5C,EACAtB,QAAQ,CAAC6C,UAAT,CAAoBpB,gBAApB,CAAqC,OAArC,CAA8CqB,OAA9C,CAAuD,IAAvD,EAGA;AACAlD,SAAS,CAAC4C,WAAV,CAAuBxC,QAAQ,CAAC6C,UAAhC,EACArB,QAAQ,CAACC,gBAAT,CAA2B,WAA3B,CAAwCsB,mBAAxC,CAA6D,KAA7D,EAEAhD,KAAK,CAAG,GAAIlD,CAAAA,KAAK,CAACmG,KAAV,EAAR,CACAjD,KAAK,CAACkD,UAAN,CAAmB,GAAIpG,CAAAA,KAAK,CAACqG,KAAV,CAAiB,QAAjB,CAAnB,CAEApD,MAAM,CAAG,GAAIjD,CAAAA,KAAK,CAACsG,iBAAV,CAA6B,EAA7B,CAAiChE,MAAM,CAACiC,UAAP,CAAoBjC,MAAM,CAACmC,WAA5D,CAAyE,CAAzE,CAA4E,IAA5E,CAAT,CACA;AACAxB,MAAM,CAACvC,QAAP,CAAgBE,CAAhB,CAAoB,CAApB,CACAqC,MAAM,CAACvC,QAAP,CAAgBG,CAAhB,CAAoB,GAApB,CAEA;AACA;AACA;AACA;AACAuC,QAAQ,CAAG,GAAIvD,CAAAA,aAAJ,CAAkBoD,MAAlB,CAA0BE,QAAQ,CAAC6C,UAAnC,CAAX,CAGA9C,KAAK,CAACqD,GAAN,CAAWtD,MAAX,EAEIlD,QAnCR,CAmCmB,GAAIC,CAAAA,KAAK,CAACC,cAAV,CAA0B,EAA1B,CAA8B,EAA9B,CAAkC,EAAlC,CAnCnB,CAoCI;AACMuG,OArCV,CAqCoB,GAAIxG,CAAAA,KAAK,CAACyG,aAAV,GAA0BC,IAA1B,CAAgC,yCAAhC,CArCpB,CAsCUvG,QAtCV,CAsCqB,GAAIH,CAAAA,KAAK,CAACI,iBAAV,CAA6B,CAAE6B,GAAG,CAAEuE,OAAP,CAA7B,CAtCrB,CAuCI9C,MAAM,CAAG,GAAI1D,CAAAA,KAAK,CAACS,IAAV,CAAgBV,QAAhB,CAA0BI,QAA1B,CAAT,CACAuD,MAAM,CAACiD,IAAP,CAAc,OAAd,CACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACFvD,QAAQ,CAACwB,gBAAT,CAA2B,QAA3B,CAAqCgC,MAArC,EACA1D,KAAK,CAACqD,GAAN,CAAW7C,MAAX,EAKAG,KAAK,CAAG,GAAI7D,CAAAA,KAAK,CAACS,IAAV,CAAgB,GAAIT,CAAAA,KAAK,CAAC6G,aAAV,CAAyB,GAAzB,CAA8B,GAA9B,CAAhB,CAAqD,GAAI7G,CAAAA,KAAK,CAACI,iBAAV,CAA6B,CAAEC,KAAK,CAAE,QAAT,CAA7B,CAArD,CAAR,CACA;AACAwD,KAAK,CAACiD,QAAN,CAAiB,IAAjB,CAzEF,yD,uCA4EA,QAASZ,CAAAA,mBAAT,CAA8BrB,KAA9B,CAAsC,CAElCA,KAAK,CAACkC,cAAN,GAEApC,QAAQ,CAACC,gBAAT,CAA2B,WAA3B,CAAwCoC,mBAAxC,CAA6D,KAA7D,EACArC,QAAQ,CAACC,gBAAT,CAA2B,SAA3B,CAAsCqC,iBAAtC,CAAyD,KAAzD,EACAtC,QAAQ,CAACC,gBAAT,CAA2B,UAA3B,CAAuCsC,kBAAvC,CAA2D,KAA3D,EAEA/C,iBAAiB,CAAGU,KAAK,CAACsC,OAAN,CAAgB7C,WAApC,CACAP,0BAA0B,CAAGD,eAA7B,CAEAO,iBAAiB,CAAGQ,KAAK,CAACuC,OAAN,CAAgB5C,WAApC,CACAP,0BAA0B,CAAGD,eAA7B,CACH,CAED,QAASgD,CAAAA,mBAAT,CAA8BnC,KAA9B,CAAsC,CAElCX,MAAM,CAAGW,KAAK,CAACsC,OAAN,CAAgB7C,WAAzB,CAEAR,eAAe,CAAG,CAAEI,MAAM,CAAGC,iBAAX,EAAiC,OAAnD,CAEAC,MAAM,CAAGS,KAAK,CAACuC,OAAN,CAAgB5C,WAAzB,CAEAR,eAAe,CAAG,CAAEI,MAAM,CAAGC,iBAAX,EAAiC,OAAnD,CACH,CACD,QAAS4C,CAAAA,iBAAT,CAA4BpC,KAA5B,CAAoC,CAChCF,QAAQ,CAAC0C,mBAAT,CAA8B,WAA9B,CAA2CL,mBAA3C,CAAgE,KAAhE,EACArC,QAAQ,CAAC0C,mBAAT,CAA8B,SAA9B,CAAyCJ,iBAAzC,CAA4D,KAA5D,EACAtC,QAAQ,CAAC0C,mBAAT,CAA8B,UAA9B,CAA0CH,kBAA1C,CAA8D,KAA9D,EACH,CACD,QAASA,CAAAA,kBAAT,CAA6BrC,KAA7B,CAAqC,CACjCF,QAAQ,CAAC0C,mBAAT,CAA8B,WAA9B,CAA2CL,mBAA3C,CAAgE,KAAhE,EACArC,QAAQ,CAAC0C,mBAAT,CAA8B,SAA9B,CAAyCJ,iBAAzC,CAA4D,KAA5D,EACAtC,QAAQ,CAAC0C,mBAAT,CAA8B,UAA9B,CAA0CH,kBAA1C,CAA8D,KAA9D,EACH,CACD,QAAShC,CAAAA,OAAT,EAAmB,CACf3C,qBAAqB,CAAE2C,OAAF,CAArB,CACA0B,MAAM,GACT,CAED,QAASA,CAAAA,MAAT,EAAkB,CAEd5C,eAAe,CAAGA,eAAe,EAAI,EAAIU,aAAR,CAAjC,CACAZ,eAAe,CAAGA,eAAe,EAAI,EAAIY,aAAR,CAAjC,CACA;AACArB,SAAS,CAACiE,aAAV,CAAwBhE,KAAxB,CAA+BL,MAA/B,EACA,GAAIsE,CAAAA,UAAU,CAAGlE,SAAS,CAACmE,gBAAV,CAA2BtE,KAAK,CAACuE,QAAjC,CAAjB,CACA,GAAIF,UAAU,CAACG,MAAX,CAAoB,CAAxB,CAA2B,CACvB,GAAIlE,WAAW,EAAI+D,UAAU,CAAC,CAAD,CAAV,CAAcI,MAAjC,CAAyC,CACrC;AACAnE,WAAW,CAAG+D,UAAU,CAAC,CAAD,CAAV,CAAcI,MAA5B,CACA;AACArG,OAAO,CAACC,GAAR,CAAYgG,UAAZ,EACH,CACJ,CACDpE,QAAQ,CAACyD,MAAT,CAAiB1D,KAAjB,CAAwBD,MAAxB,EAEH","sourcesContent":["\r\n//import * as THREE from \"three\";\r\nimport { GLTFLoader } from 'https://cdn.jsdelivr.net/npm/three/examples/jsm/loaders/GLTFLoader.js';\r\nimport {OrbitControls} from \"https://cdn.jsdelivr.net/npm/three/examples/jsm/controls/OrbitControls.js\";\r\n\r\nclass Satalite {\r\n\r\n\r\n  constructor(){\r\n    var geometry = new THREE.SphereGeometry( 1, 32, 16);\r\n    colorRandom();\r\n    var material = new THREE.MeshBasicMaterial( { color: colorRandom() } );\r\n    // enable transparency\r\n    material.transparent = true;\r\n    // set opacity to 50%\r\n    material.opacity = 0.5;\r\n    //const texture = new THREE.TextureLoader().load( '/assets/textures/Earth.002_diffuse.jpeg' );\r\n    //const material = new THREE.MeshBasicMaterial( { map: texture } );\r\n    this.satalite = new THREE.Mesh( geometry, material );\r\n    this.satalite.position.x = 50;\r\n    this.satalite.position.y = 0;\r\n    this.satalite.position.z = 0;\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  SatByLatLong(lat, long){\r\n\r\n    var cartesian_cordinates=calcCrow(lat,long, 50);\r\n    this.satalite.position.x = cartesian_cordinates.x;\r\n    this.satalite.position.y = cartesian_cordinates.y;\r\n    this.satalite.position.z = cartesian_cordinates.z;\r\n\r\n    return this;\r\n  }\r\n  SatByCart(x,y,z){\r\n    this.satalite.position.x = x;\r\n    this.satalite.position.y = z;\r\n    this.satalite.position.z = y;\r\n  }\r\n  changeColorRandom(){\r\n\r\n  }\r\n\r\n}\r\nfunction calcCrow(latitude, longitude, radius)\r\n{\r\n\r\n    const lat =  latitude;\r\n    const lon =  longitude;\r\n    console.log(Math.cos(lat),Math.cos(lon));\r\n    const x = radius*Math.cos(lat) * Math.cos(lon)\r\n\r\n    const y = radius*Math.cos(lat) * Math.sin(lon)\r\n\r\n    const z = radius*Math.sin(lat)\r\n    console.log((6371*x/250),(6371*y/250),(6371*z/250));\r\n    return {x,y,z}\r\n\r\n}\r\nfunction calcCrowReverse(x,y,z)\r\n{\r\n\r\n  const lat = Math.asin(z,1);\r\n  const long = Math.atan2(y,x);\r\n\r\n}\r\nfunction colorRandom(){\r\n\r\n  const genRanHex = size => [...Array(size)].map(() => Math.floor(Math.random() * 16).toString(16)).join('');\r\n\r\n  return '#'+genRanHex(6);\r\n\r\n}\r\n\r\n/**\r\n * Provides requestAnimationFrame in a cross browser way.\r\n * @author paulirish / http://paulirish.com/\r\n */\r\n\r\nif (!window.requestAnimationFrame) {\r\n\r\n  window.requestAnimationFrame = (function() {\r\n\r\n    return window.webkitRequestAnimationFrame ||\r\n      window.mozRequestAnimationFrame ||\r\n      window.oRequestAnimationFrame ||\r\n      window.msRequestAnimationFrame ||\r\n      function( /* function FrameRequestCallback */ callback, /* DOMElement Element */ element) {\r\n\r\n        window.setTimeout(callback, 1000 / 60);\r\n\r\n      };\r\n\r\n  })();\r\n\r\n}\r\n   var container, stats;\r\n\r\n            var camera, scene, renderer, controls, raycaster\r\n            var mouse = new THREE.Vector2(),\r\n                INTERSECTED;\r\n            var dictionary;\r\n            var sphere, earth, salatites, plane;\r\n\r\n            var targetRotationX = 0.5;\r\n            var targetRotationOnMouseDownX = 0;\r\n\r\n            var targetRotationY = 0.2;\r\n            var targetRotationOnMouseDownY = 0;\r\n\r\n            var mouseX = 0;\r\n            var mouseXOnMouseDown = 0;\r\n\r\n            var mouseY = 0;\r\n            var mouseYOnMouseDown = 0;\r\n\r\n\r\n\r\n            var windowHalfX = window.innerWidth / 2;\r\n            var windowHalfY = window.innerHeight / 2;\r\n\r\n            var slowingFactor = 0.25;\r\n            document.addEventListener( 'mousewheel', (event) => {\r\n              camera.position.z +=event.deltaY/50;\r\n            });\r\n            init().then(response=>{animate()})\r\n\r\n\r\n            async function loadWorld() {\r\n\r\n\r\n              const loader = new GLTFLoader();\r\n              var earthData;\r\n              loader.loadAsync('/assets/scene.gltf').then((data)=>{earthData = data});\r\n              //console.log(earthData);\r\n              earthData = setupModel(earthData);\r\n              //console.log(earthData);\r\n              return earthData;\r\n            }\r\n\r\n            async function init() {\r\n\r\n                container = document.createElement( 'div' );\r\n                document.body.appendChild( container );\r\n\r\n                raycaster = new THREE.Raycaster();\r\n                renderer = new THREE.WebGLRenderer({\r\n                    antialias: true\r\n                });\r\n\r\n                renderer.setSize( window.innerWidth, window.innerHeight );\r\n                renderer.domElement.addEventListener(\"click\", onclick, true);\r\n\r\n\r\n                //renderer.setClearColor( 0x00cccc, 0);\r\n                container.appendChild( renderer.domElement );\r\n                document.addEventListener( 'mousedown', onDocumentMouseDown, false );\r\n\r\n                scene = new THREE.Scene();\r\n                scene.background = new THREE.Color( 0x00cccc );\r\n\r\n                camera = new THREE.PerspectiveCamera( 70, window.innerWidth / window.innerHeight, 1, 1000 );\r\n                //console.log(camera);\r\n                camera.position.y = 0;\r\n                camera.position.z = 100;\r\n\r\n                // camera.rotation.x = 0;\r\n                // camera.rotation.y = 0;\r\n                // camera.rotation.z = 0;\r\n                //console.log(renderer);\r\n                controls = new OrbitControls(camera, renderer.domElement);\r\n\r\n\r\n                scene.add( camera );\r\n\r\n                var geometry = new THREE.SphereGeometry( 50, 32, 16);\r\n                //var material = new THREE.MeshBasicMaterial( { color: \"#166294\" } );\r\n                const texture = new THREE.TextureLoader().load( '/assets/textures/Earth.002_diffuse.jpeg' );\r\n                const material = new THREE.MeshBasicMaterial( { map: texture } );\r\n                sphere = new THREE.Mesh( geometry, material );\r\n                sphere.name = 'Earth'\r\n                //log calcrow\r\n                var city_list;\r\n\r\n                // fetch('/assets/json/sample.json')\r\n                // fetch('http://example.com/movies.json')\r\n                // .then(response => response.json())\r\n                // .then(data => console.log(data))\r\n                // .then(function(){\r\n                //   var temp = data\r\n                //   console.log(temp);\r\n                //   city_list = temp\r\n                //   console.log(city_list);\r\n                //\r\n                //   dictionary =[];\r\n                //   for (var i=0; i<100; i++) {\r\n                //     var temp_satalite = new Satalite();\r\n                //     temp_satalite.SatByCart(city_list[i].x, -1*city_list[i].y, city_list[i].z);\r\n                //     temp_satalite.satalite.name = city_list[i].city;\r\n                //     scene.add( temp_satalite.satalite );\r\n                //\r\n                //     //temp_satalite.statlite.on('click',function(ev) {});\r\n                //     //console.log(temp_satalite.satalite);\r\n                //   }\r\n                // })\r\n              controls.addEventListener( 'change', render);\r\n              scene.add( sphere );\r\n\r\n\r\n\r\n\r\n              plane = new THREE.Mesh( new THREE.PlaneGeometry( 200, 200 ), new THREE.MeshBasicMaterial( { color: 0xe0e0e0 } ) );\r\n              //plane.rotation.x = - 90 * ( Math.PI / 180 );\r\n              plane.overdraw = true;\r\n            }\r\n\r\n            function onDocumentMouseDown( event ) {\r\n\r\n                event.preventDefault();\r\n\r\n                document.addEventListener( 'mousemove', onDocumentMouseMove, false );\r\n                document.addEventListener( 'mouseup', onDocumentMouseUp, false );\r\n                document.addEventListener( 'mouseout', onDocumentMouseOut, false );\r\n\r\n                mouseXOnMouseDown = event.clientX - windowHalfX;\r\n                targetRotationOnMouseDownX = targetRotationX;\r\n\r\n                mouseYOnMouseDown = event.clientY - windowHalfY;\r\n                targetRotationOnMouseDownY = targetRotationY;\r\n            }\r\n\r\n            function onDocumentMouseMove( event ) {\r\n\r\n                mouseX = event.clientX - windowHalfX;\r\n\r\n                targetRotationX = ( mouseX - mouseXOnMouseDown ) * 0.00025;\r\n\r\n                mouseY = event.clientY - windowHalfY;\r\n\r\n                targetRotationY = ( mouseY - mouseYOnMouseDown ) * 0.00025;\r\n            }\r\n            function onDocumentMouseUp( event ) {\r\n                document.removeEventListener( 'mousemove', onDocumentMouseMove, false );\r\n                document.removeEventListener( 'mouseup', onDocumentMouseUp, false );\r\n                document.removeEventListener( 'mouseout', onDocumentMouseOut, false );\r\n            }\r\n            function onDocumentMouseOut( event ) {\r\n                document.removeEventListener( 'mousemove', onDocumentMouseMove, false );\r\n                document.removeEventListener( 'mouseup', onDocumentMouseUp, false );\r\n                document.removeEventListener( 'mouseout', onDocumentMouseOut, false );\r\n            }\r\n            function animate() {\r\n                requestAnimationFrame( animate );\r\n                render();\r\n            }\r\n\r\n            function render() {\r\n\r\n                targetRotationY = targetRotationY * (1 - slowingFactor);\r\n                targetRotationX = targetRotationX * (1 - slowingFactor);\r\n                //console.log(camera);\r\n                raycaster.setFromCamera(mouse, camera);\r\n                var intersects = raycaster.intersectObjects(scene.children);\r\n                if (intersects.length > 0) {\r\n                    if (INTERSECTED != intersects[0].object) {\r\n                        // if ( INTERSECTED ) INTERSECTED.material.emissive.setHex( INTERSECTED.currentHex );\r\n                        INTERSECTED = intersects[0].object;\r\n                        // INTERSECTED.currentHex = INTERSECTED.material.emissive.getHex();\r\n                        console.log(intersects);\r\n                    }\r\n                }\r\n                renderer.render( scene, camera );\r\n\r\n            }\r\n"]},"metadata":{},"sourceType":"module"}